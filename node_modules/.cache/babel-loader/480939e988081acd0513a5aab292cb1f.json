{"ast":null,"code":"var _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Session/withAuthentication.js\";\nimport React from 'react';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    // constructor(props) {\n    //   super(props);\n    //   this.state = {\n    //     authUser: JSON.parse(localStorage.getItem('authUser')),\n    //   };\n    // }\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        localStorage.setItem('authUser', JSON.stringify(authUser));\n        this.setState({\n          authUser\n        });\n      }, () => {\n        localStorage.removeItem('authUser');\n        this.setState({\n          authUser: null\n        });\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return React.createElement(AuthUserContext.Provider, {\n        value: this.state.authUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Component, Object.assign({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n\n  }\n\n  return compose(withFirebase, withRouter)(WithAuthentication);\n};\n\nexport default withAuthentication;\n/*\nimport React, { useEffect } from 'react';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\n\n\n\n\n\n\n\nconst withAuthentication = Component => {\n  const WithAuthentication = (props) => {\n    const [authUser, setAuthUser] = React.useState(null);\n    const [listener, setListener] = React.useState(null);\n\n    useEffect( () => {\n      const setListener = props.firebase.auth.onAuthStateChanged(u => {u ? setAuthUser(u) : setAuthUser(null);} );\n    }, []); // \n\n    return(\n    <AuthUserContext.Provider value={authUser}>\n      <AuthUserContext.Consumer>\n        {authUser => <Component {...props} authUser={authUser}/>}\n      </AuthUserContext.Consumer>  \n    </AuthUserContext.Provider>  \n    );\n\n  }\n  return compose(withFirebase)(WithAuthentication);\n}\n\nexport default withAuthentication;\n*/","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Session/withAuthentication.js"],"names":["React","compose","AuthUserContext","withFirebase","withRouter","withAuthentication","Component","WithAuthentication","componentDidMount","listener","props","firebase","onAuthUserListener","authUser","localStorage","setItem","JSON","stringify","setState","removeItem","componentWillUnmount","render","state"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACtC,QAAMC,kBAAN,SAAiCP,KAAK,CAACM,SAAvC,CAAiD;AAC/C;AACA;AAEA;AACA;AACA;AACA;AAEAE,IAAAA,iBAAiB,GAAG;AAClB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACdC,QAAQ,IAAI;AACVC,QAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAAjC;AACA,aAAKK,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACD,OAJa,EAKd,MAAM;AACJC,QAAAA,YAAY,CAACK,UAAb,CAAwB,UAAxB;AACA,aAAKD,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAE;AAAZ,SAAd;AACD,OARa,CAAhB;AAUD;;AAEDO,IAAAA,oBAAoB,GAAG;AACrB,WAAKX,QAAL;AACD;;AAEDY,IAAAA,MAAM,GAAG;AACP,aACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWT,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CADF;AAKD;;AAhC8C;;AAmCjD,SAAOT,OAAO,CACZE,YADY,EAEZC,UAFY,CAAP,CAGLG,kBAHK,CAAP;AAID,CAxCD;;AA0CA,eAAeF,kBAAf;AAEA","sourcesContent":["\nimport React from 'react';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport { withRouter } from 'react-router-dom';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    // constructor(props) {\n    //   super(props);\n\n    //   this.state = {\n    //     authUser: JSON.parse(localStorage.getItem('authUser')),\n    //   };\n    // }\n\n    componentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          localStorage.setItem('authUser', JSON.stringify(authUser));\n          this.setState({ authUser });\n        },\n        () => {\n          localStorage.removeItem('authUser');\n          this.setState({ authUser: null });\n        },\n      );\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return compose(\n    withFirebase,\n    withRouter,\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n\n/*\nimport React, { useEffect } from 'react';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\n\n\n\n\n\n\n\nconst withAuthentication = Component => {\n  const WithAuthentication = (props) => {\n    const [authUser, setAuthUser] = React.useState(null);\n    const [listener, setListener] = React.useState(null);\n\n    useEffect( () => {\n      const setListener = props.firebase.auth.onAuthStateChanged(u => {u ? setAuthUser(u) : setAuthUser(null);} );\n    }, []); // \n\n    return(\n    <AuthUserContext.Provider value={authUser}>\n      <AuthUserContext.Consumer>\n        {authUser => <Component {...props} authUser={authUser}/>}\n      </AuthUserContext.Consumer>  \n    </AuthUserContext.Provider>  \n    );\n\n  }\n  return compose(withFirebase)(WithAuthentication);\n}\n\nexport default withAuthentication;\n*/"]},"metadata":{},"sourceType":"module"}