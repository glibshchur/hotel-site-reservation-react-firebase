{"ast":null,"code":"import _classCallCheck from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import{withRouter}from'react-router-dom';import{compose}from'recompose';import AuthUserContext from'./context';import{withFirebase}from'../Firebase';import*as ROUTES from'../../constants/routes';var withAuthorization=function withAuthorization(condition){return function(Component){var WithAuthorization=/*#__PURE__*/function(_React$Component){_inherits(WithAuthorization,_React$Component);function WithAuthorization(){_classCallCheck(this,WithAuthorization);return _possibleConstructorReturn(this,_getPrototypeOf(WithAuthorization).apply(this,arguments));}_createClass(WithAuthorization,[{key:\"componentDidMount\",value:function componentDidMount(){var _this=this;this.listener=this.props.firebase.onAuthUserListener(function(authUser){if(!condition(authUser)){_this.props.history.push(ROUTES.SIGN_IN);}},function(){_this.props.history.push(ROUTES.SIGN_IN);});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.listener();}},{key:\"render\",value:function render(){var _this2=this;return React.createElement(AuthUserContext.Consumer,null,function(authUser){return condition(authUser)?React.createElement(Component,_this2.props):null;});}}]);return WithAuthorization;}(React.Component);return compose(withRouter,withFirebase)(WithAuthorization);};};export default withAuthorization;","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Session/withAuthorization.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthorization","condition","Component","WithAuthorization","listener","props","firebase","onAuthUserListener","authUser","history","push","SIGN_IN"],"mappings":"gnBACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,OAAT,KAAwB,WAAxB,CAEA,MAAOC,CAAAA,eAAP,KAA4B,WAA5B,CACA,OAASC,YAAT,KAA6B,aAA7B,CACA,MAAO,GAAKC,CAAAA,MAAZ,KAAwB,wBAAxB,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAC,SAAS,QAAI,UAAAC,SAAS,CAAI,IAC5CC,CAAAA,iBAD4C,yVAE5B,gBAElB,KAAKC,QAAL,CAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACd,SAAAC,QAAQ,CAAI,CACV,GAAI,CAACP,SAAS,CAACO,QAAD,CAAd,CAA0B,CACxB,KAAI,CAACH,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBX,MAAM,CAACY,OAA/B,EACD,CACF,CALa,CAOd,UAAM,CAAC,KAAI,CAACN,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwBX,MAAM,CAACY,OAA/B,EAAwC,CAPjC,CAAhB,CAWD,CAf+C,mEAiBzB,CACrB,KAAKP,QAAL,GACD,CAnB+C,uCAqBvC,iBACP,MACE,qBAAC,eAAD,CAAiB,QAAjB,MACG,SAAAI,QAAQ,QACPP,CAAAA,SAAS,CAACO,QAAD,CAAT,CAAsB,oBAAC,SAAD,CAAe,MAAI,CAACH,KAApB,CAAtB,CAAsD,IAD/C,EADX,CADF,CAOD,CA7B+C,+BAClBX,KAAK,CAACQ,SADY,EAgClD,MAAON,CAAAA,OAAO,CACZD,UADY,CAEZG,YAFY,CAAP,CAGLK,iBAHK,CAAP,CAID,CApCkC,EAAnC,CAsCA,cAAeH,CAAAA,iBAAf","sourcesContent":["\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\n\n\nconst withAuthorization = condition => Component => {\n  class WithAuthorization extends React.Component {\n    componentDidMount() {\n\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        \n        () => {this.props.history.push(ROUTES.SIGN_IN)},\n      );\n      \n\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        <AuthUserContext.Consumer>\n          {authUser =>\n            condition(authUser) ? <Component {...this.props} /> : null\n          }\n        </AuthUserContext.Consumer>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthorization);\n};\n\nexport default withAuthorization;"]},"metadata":{},"sourceType":"module"}