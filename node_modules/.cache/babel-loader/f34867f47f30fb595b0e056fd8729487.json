{"ast":null,"code":"import _slicedToArray from \"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Product/Edit/index.js\";\nimport React, { Component, useState, useEffect, isValidElement } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\nimport Grid from '@material-ui/core/Grid';\nimport { withAuthorization, withAuthentication } from '../../Session';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { debug } from 'util';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SingleLineError from '../../Error';\nimport { Typography } from '@material-ui/core'; //<Checkbox checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>\n\nconst useStyles = makeStyles(theme => ({\n  upload: {\n    border: \"1px solid black\"\n  },\n  spacer: {\n    height: 20\n  },\n  errorDiv: {\n    marginTop: 55\n  },\n  title: {\n    marginTop: 50,\n    marginBottom: 50\n  },\n  signInButton: {\n    height: 47,\n    width: 80,\n    marginTop: 20,\n    marginBottom: 150,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#D6D6D6'\n    }\n  },\n  deleteButton: {\n    height: 47,\n    width: 80,\n    marginLeft: 100,\n    marginTop: 20,\n    marginBottom: 150,\n    color: '#FFFFFF',\n    float: 'right',\n    backgroundColor: '#B40000',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#D6D6D6'\n    }\n  }\n}));\n\nconst EditProduct = props => {\n  const classes = useStyles();\n  const categoryRef = props.firebase.categoryRef();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        category = _useState2[0],\n        setCategory = _useState2[1]; // not '', len < 50\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        subCategory = _useState4[0],\n        setSubCategory = _useState4[1]; // not '', len < 50\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1]; // not '', len < 50\n  //const [tags, setTags] = useState('');                           // len < 500\n\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        description = _useState8[0],\n        setDescription = _useState8[1]; // not '', len < 1000\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        details = _useState10[0],\n        setDetails = _useState10[1]; // no validation, len < 1000\n\n\n  const _useState11 = useState(0),\n        _useState12 = _slicedToArray(_useState11, 2),\n        price = _useState12[0],\n        setPrice = _useState12[1]; // > 0\n\n\n  const _useState13 = useState(null),\n        _useState14 = _slicedToArray(_useState13, 2),\n        previewImage = _useState14[0],\n        setPreviewImage = _useState14[1];\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        subImageOne = _useState16[0],\n        setSubImageOne = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        subImageTwo = _useState18[0],\n        setSubImageTwo = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        isPublic = _useState20[0],\n        setIsPublic = _useState20[1]; //const [model, setModel] = useState('');  // len < 50\n\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        categories = _React$useState2[0],\n        setCategories = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        subCategories = _React$useState4[0],\n        setSubCategories = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        errors = _React$useState6[0],\n        setErrors = _React$useState6[1];\n\n  const onDelete = event => {\n    props.firebase.deleteProduct(props.match.params.productId);\n  };\n\n  const onSubmit = event => {\n    setErrors([]);\n    let _errors = [];\n    if (category.length > 50) _errors.push('Category should be less than 50 characters');\n    if (subCategory.length > 50) _errors.push('Sub category should be less than 50 characters');\n    if (name.length > 50) _errors.push('Name should be less than 50 characters'); //if(tags.length > 500) _errors.push('Tags should be less than 500 characters');\n\n    if (category.length > 50) _errors.push('Category should be less than 50 characters');\n    if (description.length > 1000) _errors.push('Description should be less than 1000 characters');\n    if (details.length > 1000) _errors.push('Details should be less than 1000 characters');\n    if (price < 0) _errors.push('Price should be a non negative number'); //if(model.length > 50) _errors.push('Model should be less than 50 characters');\n\n    setErrors(_errors);\n    if (_errors.length > 0) return;\n    props.firebase.editProduct(props.match.params.productId, {\n      category,\n      subCategory,\n      name,\n      description,\n      details,\n      price,\n      previewImage,\n      subImageOne,\n      subImageTwo,\n      isPublic\n    }).then(x => props.history.push(\"/store/\".concat(category, \"/\").concat(subCategory))).catch(err => setErrors([err.message])); //setErrors([\"Something went wrong when trying to create new product\"])) \n    //event.preventDefault();\n  }; // Update autocomplete when category changes\n  // This event is fired when user selects autocomplete option\n\n\n  const onCategorySelect = (event, val) => {\n    setSubCategories([]);\n    setCategory(val);\n    categories.forEach(x => {\n      if (x.name === val && !!x.subCategories) {\n        setSubCategories(Object.keys(x.subCategories));\n      }\n    });\n  }; //This event fires when user writes in the autocomplete textbox\n\n\n  const onCategoryChange = event => {\n    setSubCategories([]);\n    let val = event.target.value;\n    setCategory(val);\n    categories.forEach(x => {\n      if (x.name === val && !!x.subCategories) {\n        setSubCategories(Object.keys(x.subCategories));\n      }\n    });\n  };\n\n  useEffect(() => {\n    props.firebase.product(props.match.params.productId).once(\"value\", snapshot => {\n      if (!snapshot.exists()) {\n        props.history.push('/404');\n      } else {\n        setCategory(snapshot.val().category);\n        setSubCategory(snapshot.val().subCategory);\n        setName(snapshot.val().name); //setTags(snapshot.val().tags);\n\n        setDescription(snapshot.val().description);\n        setDetails(snapshot.val().details);\n        setPrice(snapshot.val().price);\n        setSubImageOne(snapshot.val().subImageOne == 'null.jpg' ? null : snapshot.val().subImageOne);\n        setPreviewImage(snapshot.val().previewImage == 'null.jpg' ? null : snapshot.val().subImageOne);\n        setSubImageTwo(snapshot.val().subImageTwo == 'null.jpg' ? null : snapshot.val().subImageOne);\n        setIsPublic(snapshot.val().isPublic); //setModel(snapshot.val().model);\n\n        setErrors(snapshot.val().errors);\n      }\n    });\n  }, [props.match.params.productId]);\n  useEffect(() => {\n    const ca = categoryRef.on(\"child_added\", (snapshot, prevChildKey) => {\n      setCategories(x => [...x, {\n        name: snapshot.key,\n        key: snapshot.key,\n        subCategories: snapshot.val().subCategories\n      }]);\n    });\n    const cr = categoryRef.on(\"child_removed\", snapshot => {\n      setCategories(x => x.filter(e => e !== snapshot.key));\n    });\n    return () => {\n      categoryRef.off(\"child_added\", ca);\n      categoryRef.off(\"child_removed\", cr);\n    };\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }, \" \\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u041D\\u043E\\u0432\\u0438\\u0439 \\u041D\\u043E\\u043C\\u0435\\u0440 \"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    filesLimit: 1,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setPreviewImage(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, \" \")), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setSubImageOne(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setSubImageTwo(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.verticalSpacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223\n    },\n    __self: this\n  }, !!errors && errors.map((e, i) => React.createElement(SingleLineError, {\n    key: i,\n    error: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    freeSolo: true,\n    id: \"category\",\n    options: categories.map(category => category.name),\n    onChange: onCategorySelect,\n    value: category,\n    renderInput: params => React.createElement(TextField, Object.assign({\n      autoFocus: true\n    }, params, {\n      margin: \"normal\",\n      name: \"category\",\n      id: \"category\",\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\\u0443\",\n      value: category,\n      onChange: onCategoryChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    freeSolo: true,\n    id: \"category\",\n    options: subCategories.map(category => category),\n    onChange: (e, v) => {\n      setSubCategory(v);\n    },\n    value: subCategory,\n    renderInput: params => React.createElement(TextField, Object.assign({\n      autoFocus: true\n    }, params, {\n      margin: \"normal\",\n      name: \"subCategory\",\n      id: \"subCategory\",\n      label: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u0433\\u043E\\u0442\\u0435\\u043B\\u044E\",\n      value: subCategory,\n      onChange: e => setSubCategory(e.target.value),\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"name\",\n    id: \"name\",\n    label: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"description\",\n    multiline: true,\n    rows: 8,\n    id: \"description\",\n    label: \"\\u041E\\u043F\\u0438\\u0441...\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"details\",\n    multiline: true,\n    rows: 6,\n    id: \"details\",\n    label: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0456\",\n    value: details,\n    onChange: e => setDetails(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"price\",\n    id: \"price\",\n    label: \"Price\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"bottom\",\n    control: React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: isPublic,\n      onChange: e => setIsPublic(e.target.checked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }),\n    label: \"Publish \",\n    labelPlacement: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356\n    },\n    __self: this\n  })), React.createElement(Button, {\n    type: \"submit\",\n    className: classes.signInButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    },\n    __self: this\n  }, \" \\u041E\\u043D\\u043E\\u0432\\u0438\\u0442\\u0438 \"), React.createElement(Button, {\n    onClick: onDelete,\n    className: classes.deleteButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365\n    },\n    __self: this\n  }, \" \\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438 \")))));\n};\n\nconst condition = authUser => !!authUser && authUser.isAdmin;\n\nexport default compose(withAuthentication, withAuthorization(condition), withFirebase)(EditProduct);","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Product/Edit/index.js"],"names":["React","Component","useState","useEffect","isValidElement","TextField","Button","DropzoneArea","Checkbox","withFirebase","compose","Grid","withAuthorization","withAuthentication","makeStyles","Autocomplete","debug","FormGroup","FormControlLabel","FormControl","FormLabel","SingleLineError","Typography","useStyles","theme","upload","border","spacer","height","errorDiv","marginTop","title","marginBottom","signInButton","width","color","backgroundColor","borderRadius","deleteButton","marginLeft","float","EditProduct","props","classes","categoryRef","firebase","category","setCategory","subCategory","setSubCategory","name","setName","description","setDescription","details","setDetails","price","setPrice","previewImage","setPreviewImage","subImageOne","setSubImageOne","subImageTwo","setSubImageTwo","isPublic","setIsPublic","categories","setCategories","subCategories","setSubCategories","errors","setErrors","onDelete","event","deleteProduct","match","params","productId","onSubmit","_errors","length","push","editProduct","then","x","history","catch","err","message","onCategorySelect","val","forEach","Object","keys","onCategoryChange","target","value","product","once","snapshot","exists","ca","on","prevChildKey","key","cr","filter","e","off","file","verticalSpacer","map","i","v","checked","condition","authUser","isAdmin"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, isValidElement } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {DropzoneArea} from 'material-ui-dropzone'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\nimport Grid from '@material-ui/core/Grid'\nimport { withAuthorization, withAuthentication } from '../../Session';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { debug } from 'util';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SingleLineError from '../../Error'\nimport { Typography } from '@material-ui/core';\n\n//<Checkbox checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>\n\nconst useStyles = makeStyles(theme => ({\n  upload:{\n    border : \"1px solid black\"\n  },\n  spacer:{\n    height:20\n  },\n  errorDiv:{\n    marginTop:55,\n  },\n  title:{\n    marginTop:50,\n    marginBottom:50,\n  },\n  signInButton:{\n    height:47,\n    width:80,\n    marginTop:20,\n    marginBottom:150,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius:0,\n    '&:hover':{\n      backgroundColor: '#D6D6D6'\n    }\n  },\n  deleteButton:{\n    height:47,\n    width:80,\n    marginLeft:100,\n    marginTop:20,\n    marginBottom:150,\n    color: '#FFFFFF',\n    float: 'right',\n    backgroundColor: '#B40000',\n    borderRadius:0,\n    '&:hover':{\n      backgroundColor: '#D6D6D6'\n    }\n  }\n}));\n\nconst EditProduct = (props) => {\n\n  const classes = useStyles();\n  const categoryRef = props.firebase.categoryRef();\n\n  const [category, setCategory] = useState('');                   // not '', len < 50\n  const [subCategory, setSubCategory] = useState('');             // not '', len < 50\n  const [name, setName] = useState('');                           // not '', len < 50\n  //const [tags, setTags] = useState('');                           // len < 500\n  const [description, setDescription] = useState('');             // not '', len < 1000\n  const [details, setDetails] = useState('');                     // no validation, len < 1000\n  const [price, setPrice] = useState(0);                          // > 0\n  const [previewImage, setPreviewImage] = useState(null);         \n  const [subImageOne, setSubImageOne] = useState(null);           \n  const [subImageTwo, setSubImageTwo] = useState(null);           \n  const [isPublic, setIsPublic] = useState(false)\n  //const [model, setModel] = useState('');  // len < 50\n  const [categories, setCategories] = React.useState([])\n  const [subCategories, setSubCategories] = React.useState([]);\n  const [errors, setErrors] = React.useState([]);\n\n\n  const onDelete = event =>{\n    props.firebase.deleteProduct(props.match.params.productId);\n  }\n  const onSubmit = event => {\n\n    setErrors([]);\n\n    let _errors = [];\n\n    if(category.length > 50) _errors.push('Category should be less than 50 characters');\n    if(subCategory.length > 50) _errors.push('Sub category should be less than 50 characters');\n    if(name.length > 50) _errors.push('Name should be less than 50 characters');\n    //if(tags.length > 500) _errors.push('Tags should be less than 500 characters');\n    if(category.length > 50) _errors.push('Category should be less than 50 characters');\n    if(description.length > 1000) _errors.push('Description should be less than 1000 characters');\n    if(details.length > 1000) _errors.push('Details should be less than 1000 characters');\n    if(price < 0) _errors.push('Price should be a non negative number');\n    //if(model.length > 50) _errors.push('Model should be less than 50 characters');\n\n    setErrors(_errors);\n\n    if(_errors.length > 0) return;\n    \n    props.firebase.editProduct(props.match.params.productId, {\n      category,\n      subCategory,\n      name,\n      description,\n      details,\n      price,\n      previewImage,\n      subImageOne,\n      subImageTwo,\n      isPublic,\n    })\n    .then(x => props.history.push(`/store/${category}/${subCategory}`))\n    .catch(err => setErrors([err.message]))//setErrors([\"Something went wrong when trying to create new product\"])) \n\n    //event.preventDefault();\n  }\n\n\n  // Update autocomplete when category changes\n  // This event is fired when user selects autocomplete option\n  const onCategorySelect = (event, val) => {\n    setSubCategories([]);\n    setCategory(val);\n    categories.forEach(x => {\n      if(x.name === val && !!x.subCategories){\n        setSubCategories( Object.keys(x.subCategories) )       \n      }\n    })\n  }\n  //This event fires when user writes in the autocomplete textbox\n  const onCategoryChange = (event) => {\n    setSubCategories([]);\n    \n    let val = event.target.value;\n    setCategory(val);\n    categories.forEach(x => {\n      if(x.name === val && !!x.subCategories){\n        setSubCategories( Object.keys(x.subCategories) )\n      }\n    })\n  }\n\n  useEffect(() => {\n    props.firebase.product(props.match.params.productId)\n      .once(\"value\", (snapshot) => {\n        \n        if(!snapshot.exists()){\n          props.history.push('/404');\n        }\n        else {\n          setCategory(snapshot.val().category);\n          setSubCategory(snapshot.val().subCategory);\n          setName(snapshot.val().name);\n          //setTags(snapshot.val().tags);\n          setDescription(snapshot.val().description);\n          setDetails(snapshot.val().details);\n          setPrice(snapshot.val().price);   \n          setSubImageOne(snapshot.val().subImageOne == 'null.jpg' ? null : snapshot.val().subImageOne);\n          setPreviewImage(snapshot.val().previewImage == 'null.jpg' ? null : snapshot.val().subImageOne);\n          setSubImageTwo(snapshot.val().subImageTwo == 'null.jpg' ? null : snapshot.val().subImageOne);   \n          \n          setIsPublic(snapshot.val().isPublic);\n         //setModel(snapshot.val().model);\n          setErrors(snapshot.val().errors);\n        }\n    })     \n  }, [props.match.params.productId]);\n\n  useEffect( () => {\n    const ca = categoryRef.on(\"child_added\", (snapshot, prevChildKey) => {    \n      setCategories(x => [...x, {name:snapshot.key, key:snapshot.key, subCategories:snapshot.val().subCategories}])      \n    })\n\n    const cr = categoryRef.on(\"child_removed\", (snapshot) => {\n      setCategories(x => x.filter(e => e !== snapshot.key) )\n    })\n\n    return () => {\n      categoryRef.off(\"child_added\", ca);\n      categoryRef.off(\"child_removed\", cr);\n    }\n  }, [])\n\n\n\n\n  return(\n    <React.Fragment>\n\n      <Typography className={classes.title} variant=\"h5\"> Додати Новий Номер </Typography>\n\n      <form onSubmit={onSubmit}>\n        <Grid container spacing={5} >\n   \n          <Grid item xs={6} spacing={5}>\n            <DropzoneArea className={classes.upload} filesLimit={1} dropzoneText=\"Додайте фото\" onChange={(file) => setPreviewImage(file)}/>\n            <Grid item xs={12}>\n              <div className={classes.spacer}> </div>\n            </Grid>\n            <Grid container spacing={2}>\n            \n                <Grid item xs={6}>\n                  <DropzoneArea className={classes.upload} dropzoneText=\"Додайте фото\" onChange={(file) => setSubImageOne(file)}/>\n                </Grid>\n                <Grid item xs={6}>\n                  <DropzoneArea className={classes.upload} dropzoneText=\"Додайте фото\" onChange={(file) => setSubImageTwo(file)}/>\n                </Grid>\n              \n            </Grid>\n\n            <div className={classes.verticalSpacer}>\n              {!!errors && errors.map((e, i) => <SingleLineError key={i} error={e}/>)}\n            </div>\n\n            \n\n          </Grid>\n\n          <Grid item xs={5}>\n            <Grid container spacing={5}>\n              <Grid item xs={6}>\n                <Autocomplete \n                  freeSolo\n                  id=\"category\"\n                  options={categories.map(category => category.name)}\n                  onChange={onCategorySelect}\n                  value={category}\n                  renderInput={params => (\n                    <TextField autoFocus  \n                    {...params}        \n                    margin=\"normal\"\n                    name=\"category\"\n                    id=\"category\"\n                    label=\"Назва комплексу\"\n                    value={category}\n                    onChange={onCategoryChange}     \n                    fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={6}>\n              <Autocomplete \n                  freeSolo\n                  id=\"category\"\n                  options={subCategories.map(category => category)}\n                  onChange={(e,v) => {setSubCategory(v)}}\n                  value={subCategory}\n                  renderInput={params => (\n                    <TextField autoFocus  \n                    {...params}        \n                    margin=\"normal\"\n                    name=\"subCategory\"\n                    id=\"subCategory\"\n                    label=\"Назва готелю\"\n                    value={subCategory}\n                    onChange={(e) => setSubCategory(e.target.value)}     \n                    fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n\n          \n                  \n              <Grid container spacing={5}>\n                <Grid item xs={6}>                      \n                  <TextField autoFocus          \n                    margin=\"normal\"\n                    name=\"name\"\n                    id=\"name\"\n                    label=\"Назва номеру\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    \n                    fullWidth\n                  />\n                </Grid>\n                {/* <Grid item xs={6}>                         \n                  <TextField autoFocus          \n                    margin=\"normal\"\n                    name=\"subName\"\n                    id=\"subName\"\n                    label=\"model (max 50 char)\"\n                    value={model}\n                    onChange={(e) => setModel(e.target.value)}\n                    \n                    fullWidth\n                  />\n                </Grid> */}\n              </Grid> \n            \n\n\n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"description\"\n            multiline\n            rows={8}\n            id=\"description\"\n            label=\"Опис...\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            \n            fullWidth\n          />\n\n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"details\"\n            multiline\n            rows={6}\n            id=\"details\"\n            label=\"Деталі\"\n            value={details}\n            onChange={(e) => setDetails(e.target.value)}\n            \n            fullWidth\n          />\n\n          {/* <TextField autoFocus          \n            margin=\"normal\"\n            name=\"tags\"\n            id=\"tags\"\n            label=\"Tag (max 500 char)\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n            multiline\n            fullWidth\n          /> */}\n          \n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"price\"\n            id=\"price\"\n            label=\"Price\"\n            type=\"number\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}         \n            fullWidth\n          />\n          <div>\n            <FormControlLabel\n            value=\"bottom\"\n            control={<Checkbox color=\"primary\" checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>}\n            label=\"Publish \"\n            labelPlacement=\"left\"\n            />\n          </div>\n\n          <Button type=\"submit\" className={classes.signInButton}> Оновити </Button>\n          <Button onClick={onDelete}className={classes.deleteButton}> Видалити </Button>\n          </Grid>\n        \n        </Grid>\n        \n\n          \n\n      </form>\n    </React.Fragment>\n  );\n}\n\nconst condition = authUser => !!authUser && authUser.isAdmin;\n\nexport default compose(withAuthentication, withAuthorization(condition), withFirebase)(EditProduct);"]},"metadata":{},"sourceType":"module"}