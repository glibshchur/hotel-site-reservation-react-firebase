{"ast":null,"code":"var _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Product/List/ProductListItem.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, CardMedia, Card, CardContent, CardActions, Button } from '@material-ui/core';\nimport { typography } from '@material-ui/system';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\nconst useStyles = makeStyles(theme => ({\n  gridItemAdmin: {\n    height: 580,\n    width: \"100%\",\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  gridItem: {\n    height: 500,\n    width: \"100%\",\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  card: {\n    maxHeight: 100,\n    borderRadius: 0,\n    textDecoration: \"none\"\n  },\n  cardContent: {\n    height: 100,\n    backgroundColor: \"#F1F2F0\"\n  },\n  media: {\n    height: 400,\n    borderRadius: 0\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#000000\"\n  }\n}));\n\nconst ProductListGrid = props => {\n  const classes = useStyles();\n};\n\nconst ProductListItem = props => {\n  const classes = useStyles();\n  if (!props.product.isPublic && (!!!props.authUser || !!props.authUser && !props.authUser.isAdmin)) return null;\n  if (!!props.authUser && props.authUser.isAdmin) return React.createElement(Grid, {\n    className: classes.gridItemAdmin,\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Card, {\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.imageRef,\n    title: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \" \", props.product.name, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" \", props.product.model, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \" $\", props.product.price, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \" Public : \", props.product.isPublic.toString(), \" \")), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/products/edit/\".concat(props.product.key),\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Edit\")), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: e => {\n      props.firebase.deleteProduct(props.product.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Delete\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: e => {\n      props.firebase.archiveProduct(props.product.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, \"\\u0410\\u0440\\u0445\\u0456\\u0432 \\u0431\\u0443\\u0434\\u0438\\u043D\\u043A\\u0456\\u0432\"), React.createElement(Link, {\n    to: \"/products/details/\".concat(props.product.key),\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Details\"))));\n  return React.createElement(Grid, {\n    className: classes.gridItem,\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/products/details/\".concat(props.product.key),\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, React.createElement(Card, {\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.imageRef,\n    title: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \" \", props.product.name, \" \"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \" \", props.product.model, \" \"), React.createElement(Typography, {\n    variant: \"body2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \" $\", props.product.price, \" \"))));\n};\n\nexport default ProductListItem;","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Product/List/ProductListItem.js"],"names":["React","useEffect","useState","useRef","BrowserRouter","Router","Link","Route","makeStyles","Grid","Typography","CardMedia","Card","CardContent","CardActions","Button","typography","VisibilityOffOutlinedIcon","useStyles","theme","gridItemAdmin","height","width","borderRadius","backgroundColor","gridItem","card","maxHeight","textDecoration","cardContent","media","link","color","ProductListGrid","props","classes","ProductListItem","product","isPublic","authUser","isAdmin","imageRef","name","model","price","toString","key","e","firebase","deleteProduct","archiveProduct"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useRef } from 'react';\nimport { BrowserRouter as Router, Link, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, CardMedia, Card, CardContent, CardActions, Button } from '@material-ui/core'\nimport { typography } from '@material-ui/system';\nimport VisibilityOffOutlinedIcon from '@material-ui/icons/VisibilityOffOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  gridItemAdmin:{\n    height:580,\n    width:\"100%\",\n    borderRadius:0, \n\n    '&:hover':{\n      backgroundColor: '#FCFDFC'\n    } \n  },\n  gridItem:{\n    height:500,\n    width:\"100%\",\n    borderRadius:0, \n\n    '&:hover':{\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  card: {\n    maxHeight:100,\n    borderRadius:0,\n    textDecoration: \"none\",\n  },\n  cardContent:{\n    height:100,\n    backgroundColor:\"#F1F2F0\",\n\n\n  },\n  media: {\n    height: 400,\n    borderRadius:0,\n\n  },\n  link:{\n    textDecoration: \"none\",\n    color:\"#000000\"\n  }\n}));\n\n\nconst ProductListGrid = props => {\n  const classes = useStyles();\n\n\n}\n\nconst ProductListItem = props => {\n  const classes = useStyles();\n\n  if(!props.product.isPublic &&  ((!!!props.authUser)  || (!!props.authUser && !props.authUser.isAdmin)))\n    return null;\n\n  if(!!props.authUser && props.authUser.isAdmin)\n    return(\n      <Grid className={classes.gridItemAdmin} item xs={3}>\n        <Card elevation={0}>\n          <CardMedia \n          className={classes.media}\n          image={props.product.imageRef}\n          title={\"test\"}\n          \n          />\n        </Card>\n        \n        <CardContent>\n          <Typography> {props.product.name} </Typography>\n          <Typography> {props.product.model} </Typography>\n          <Typography> ${props.product.price} </Typography>\n          <Typography> Public : {props.product.isPublic.toString()} </Typography>\n        </CardContent>\n\n        <CardActions>\n          <Link to={`/products/edit/${props.product.key}`} className={classes.link}>\n            <Button size=\"small\" color=\"primary\">\n              Edit\n            </Button>\n          </Link>\n          <Button size=\"small\" color=\"primary\" onClick={(e) => {props.firebase.deleteProduct(props.product.key)}}>\n            Delete\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={(e) => {props.firebase.archiveProduct(props.product.key)}}>\n            Архів будинків\n          </Button>\n\n          <Link to={`/products/details/${props.product.key}`} className={classes.link}>\n            <Button size=\"small\" color=\"primary\">\n              Details\n            </Button>\n          </Link>\n          \n        </CardActions>\n      </Grid>\n    )\n\n  return(\n    \n      <Grid className={classes.gridItem} item xs={3}>\n        <Link to={`/products/details/${props.product.key}`} className={classes.link}>\n          <Card elevation={0}>\n            <CardMedia \n            className={classes.media}\n            image={props.product.imageRef}\n            title={\"test\"}       \n            />\n          </Card>\n\n          <CardContent>\n\n            <Typography variant=\"subtitle1\"> {props.product.name} </Typography>\n            <Typography variant=\"body2\"> {props.product.model} </Typography>\n            <Typography variant=\"body2\"> ${props.product.price} </Typography>\n          </CardContent>\n        </Link>   \n      </Grid>\n    \n  )\n\n\n}\n\n\nexport default ProductListItem;"]},"metadata":{},"sourceType":"module"}