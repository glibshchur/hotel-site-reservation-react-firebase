{"ast":null,"code":"import _slicedToArray from \"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Product/Create/index.js\";\nimport React, { Component, useState, useEffect, isValidElement } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\nimport Grid from '@material-ui/core/Grid';\nimport { withAuthorization, withAuthentication } from '../../Session';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { debug } from 'util';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SingleLineError from '../../Error';\nimport { Typography } from '@material-ui/core';\nimport { render } from 'react-dom';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css'; //<Checkbox checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>\n\nvar today = new Date();\nvar lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() - 7);\nconst useStyles = makeStyles(theme => ({\n  upload: {\n    border: \"1px solid black\"\n  },\n  spacer: {\n    height: 20\n  },\n  errorDiv: {\n    marginTop: 55\n  },\n  title: {\n    marginTop: 50,\n    marginBottom: 50\n  },\n  signInButton: {\n    height: 47,\n    width: 80,\n    marginTop: 20,\n    marginBottom: 150,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#D6D6D6'\n    }\n  }\n})); // TODO: [Feature] Add support for categories without subCategories\n\nconst CreateProduct = props => {\n  const classes = useStyles();\n  const categoryRef = props.firebase.categoryRef(); //category\n  //subcategory\n  //Name\n  //Tags\n  //Description\n  //Details\n  //price\n  //mainImage\n  //subImage1\n  //subImage2\n  //visible\n  //TODO:[Feature] Variants\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        category = _useState2[0],\n        setCategory = _useState2[1]; // not '', len < 50\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        subCategory = _useState4[0],\n        setSubCategory = _useState4[1]; // not '', len < 50\n\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        name = _useState6[0],\n        setName = _useState6[1]; // not '', len < 50\n\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        tags = _useState8[0],\n        setTags = _useState8[1]; // len < 500\n\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        description = _useState10[0],\n        setDescription = _useState10[1]; // not '', len < 1000\n\n\n  const _useState11 = useState(''),\n        _useState12 = _slicedToArray(_useState11, 2),\n        details = _useState12[0],\n        setDetails = _useState12[1]; // no validation, len < 1000\n\n\n  const _useState13 = useState(0),\n        _useState14 = _slicedToArray(_useState13, 2),\n        price = _useState14[0],\n        setPrice = _useState14[1]; // > 0\n\n\n  const _useState15 = useState(null),\n        _useState16 = _slicedToArray(_useState15, 2),\n        previewImage = _useState16[0],\n        setPreviewImage = _useState16[1];\n\n  const _useState17 = useState(null),\n        _useState18 = _slicedToArray(_useState17, 2),\n        subImageOne = _useState18[0],\n        setSubImageOne = _useState18[1];\n\n  const _useState19 = useState(null),\n        _useState20 = _slicedToArray(_useState19, 2),\n        subImageTwo = _useState20[0],\n        setSubImageTwo = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        isPublic = _useState22[0],\n        setIsPublic = _useState22[1];\n\n  const _useState23 = useState(''),\n        _useState24 = _slicedToArray(_useState23, 2),\n        model = _useState24[0],\n        setModel = _useState24[1]; // len < 50\n\n\n  const _React$useState = React.useState([]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        categories = _React$useState2[0],\n        setCategories = _React$useState2[1];\n\n  const _React$useState3 = React.useState([]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        subCategories = _React$useState4[0],\n        setSubCategories = _React$useState4[1];\n\n  const _React$useState5 = React.useState([]),\n        _React$useState6 = _slicedToArray(_React$useState5, 2),\n        errors = _React$useState6[0],\n        setErrors = _React$useState6[1];\n\n  const onSubmit = event => {\n    setErrors([]);\n    let _errors = [];\n    if (category.length > 50) _errors.push('Category should be less than 50 characters');\n    if (subCategory.length > 50) _errors.push('Sub category should be less than 50 characters');\n    if (name.length > 50) _errors.push('Name should be less than 50 characters');\n    if (tags.length > 500) _errors.push('Tags should be less than 500 characters');\n    if (category.length > 50) _errors.push('Category should be less than 50 characters');\n    if (description.length > 1000) _errors.push('Description should be less than 1000 characters');\n    if (details.length > 1000) _errors.push('Details should be less than 1000 characters');\n    if (price < 0) _errors.push('Price should be a non negative number');\n    if (model.length > 50) _errors.push('Model should be less than 50 characters');\n    setErrors(_errors);\n    if (_errors.length > 0) return;\n    props.firebase.createProduct({\n      category,\n      subCategory,\n      tags,\n      name,\n      description,\n      details,\n      price,\n      previewImage,\n      subImageOne,\n      subImageTwo,\n      isPublic,\n      model\n    }).then(x => props.history.push(\"/store/\".concat(category, \"/\").concat(subCategory))).catch(err => setErrors([err.message])); //setErrors([\"Something went wrong when trying to create new product\"])) \n\n    event.preventDefault();\n  }; // Update autocomplete when category changes\n  // This event is fired when user selects autocomplete option\n\n\n  const onCategorySelect = (event, val) => {\n    setSubCategories([]);\n    setCategory(val);\n    categories.forEach(x => {\n      if (x.name === val && !!x.subCategories) {\n        setSubCategories(Object.keys(x.subCategories));\n      }\n    });\n  }; //This event fires when user writes in the autocomplete textbox\n\n\n  const onCategoryChange = event => {\n    setSubCategories([]);\n    let val = event.target.value;\n    setCategory(val);\n    categories.forEach(x => {\n      if (x.name === val && !!x.subCategories) {\n        setSubCategories(Object.keys(x.subCategories));\n      }\n    });\n  };\n\n  useEffect(() => {\n    const ca = categoryRef.on(\"child_added\", (snapshot, prevChildKey) => {\n      setCategories(x => [...x, {\n        name: snapshot.key,\n        key: snapshot.key,\n        subCategories: snapshot.val().subCategories\n      }]);\n    });\n    const cr = categoryRef.on(\"child_removed\", snapshot => {\n      setCategories(x => x.filter(e => e !== snapshot.key));\n    });\n    return () => {\n      categoryRef.off(\"child_added\", ca);\n      categoryRef.off(\"child_removed\", cr);\n    };\n  }, []);\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, \" \\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u0438\\u0439 \\u043D\\u043E\\u043C\\u0435\\u0440 \"), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    filesLimit: 1,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setPreviewImage(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \" \")), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setSubImageOne(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, React.createElement(DropzoneArea, {\n    className: classes.upload,\n    dropzoneText: \"\\u0414\\u043E\\u0434\\u0430\\u0439\\u0442\\u0435 \\u0444\\u043E\\u0442\\u043E\",\n    onChange: file => setSubImageTwo(file),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: classes.verticalSpacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }, !!errors && errors.map((e, i) => React.createElement(SingleLineError, {\n    key: i,\n    error: e,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206\n    },\n    __self: this\n  })))), React.createElement(Grid, {\n    item: true,\n    xs: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    freeSolo: true,\n    id: \"category\",\n    options: categories.map(category => category.name),\n    onChange: onCategorySelect,\n    renderInput: params => React.createElement(TextField, Object.assign({\n      autoFocus: true\n    }, params, {\n      margin: \"normal\",\n      name: \"category\",\n      id: \"category\",\n      label: \"\\u041A\\u043E\\u043C\\u043F\\u043B\\u0435\\u043A\\u0441\",\n      value: category,\n      onChange: onCategoryChange,\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235\n    },\n    __self: this\n  }, React.createElement(Autocomplete, {\n    freeSolo: true,\n    id: \"category\",\n    options: subCategories.map(category => category),\n    onChange: (e, v) => {\n      setSubCategory(v);\n    },\n    renderInput: params => React.createElement(TextField, Object.assign({\n      autoFocus: true\n    }, params, {\n      margin: \"normal\",\n      name: \"subCategory\",\n      id: \"subCategory\",\n      label: \"\\u0413\\u043E\\u0442\\u0435\\u043B\\u044C\",\n      value: subCategory,\n      onChange: e => setSubCategory(e.target.value),\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"name\",\n    id: \"name\",\n    label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"description\",\n    multiline: true,\n    rows: 8,\n    id: \"description\",\n    label: \"\\u041E\\u043F\\u0438\\u0441\",\n    value: description,\n    onChange: e => setDescription(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0456\",\n    multiline: true,\n    rows: 6,\n    id: \"details\",\n    label: \"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0456\",\n    value: details,\n    onChange: e => setDetails(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"price\",\n    id: \"price\",\n    label: \"\\u0426\\u0456\\u043D\\u0430\",\n    type: \"number\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    value: \"bottom\",\n    control: React.createElement(Checkbox, {\n      color: \"primary\",\n      checked: isPublic,\n      onChange: e => setIsPublic(e.target.checked),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }),\n    label: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0456\\u043A\\u0443\\u0432\\u0430\\u0442\\u0438 \",\n    labelPlacement: \"left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 325\n    },\n    __self: this\n  })), React.createElement(InfiniteCalendar, {\n    width: 400,\n    height: 600,\n    selected: today,\n    disabledDays: [0, 6],\n    minDate: lastWeek,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    className: classes.signInButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    },\n    __self: this\n  }, \" \\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \")))));\n};\n\nconst condition = authUser => !!authUser && authUser.isAdmin;\n\nexport default compose(withAuthentication, withAuthorization(condition), withFirebase)(CreateProduct);","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Product/Create/index.js"],"names":["React","Component","useState","useEffect","isValidElement","TextField","Button","DropzoneArea","Checkbox","withFirebase","compose","Grid","withAuthorization","withAuthentication","makeStyles","Autocomplete","debug","FormGroup","FormControlLabel","FormControl","FormLabel","SingleLineError","Typography","render","InfiniteCalendar","today","Date","lastWeek","getFullYear","getMonth","getDate","useStyles","theme","upload","border","spacer","height","errorDiv","marginTop","title","marginBottom","signInButton","width","color","backgroundColor","borderRadius","CreateProduct","props","classes","categoryRef","firebase","category","setCategory","subCategory","setSubCategory","name","setName","tags","setTags","description","setDescription","details","setDetails","price","setPrice","previewImage","setPreviewImage","subImageOne","setSubImageOne","subImageTwo","setSubImageTwo","isPublic","setIsPublic","model","setModel","categories","setCategories","subCategories","setSubCategories","errors","setErrors","onSubmit","event","_errors","length","push","createProduct","then","x","history","catch","err","message","preventDefault","onCategorySelect","val","forEach","Object","keys","onCategoryChange","target","value","ca","on","snapshot","prevChildKey","key","cr","filter","e","off","file","verticalSpacer","map","i","params","v","checked","condition","authUser","isAdmin"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect, isValidElement } from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {DropzoneArea} from 'material-ui-dropzone'\n\nimport Checkbox from '@material-ui/core/Checkbox'\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\nimport Grid from '@material-ui/core/Grid'\nimport { withAuthorization, withAuthentication } from '../../Session';\nimport { makeStyles } from '@material-ui/styles';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { debug } from 'util';\n\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport SingleLineError from '../../Error'\nimport { Typography } from '@material-ui/core';\nimport { render } from 'react-dom';\nimport InfiniteCalendar from 'react-infinite-calendar';\nimport 'react-infinite-calendar/styles.css';\n\n//<Checkbox checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>\n\nvar today = new Date();\nvar lastWeek = new Date(today.getFullYear(), today.getMonth(), today.getDate() -7);\n\nconst useStyles = makeStyles(theme => ({\n  upload:{\n    border : \"1px solid black\"\n  },\n  spacer:{\n    height:20\n  },\n  errorDiv:{\n    marginTop:55,\n  },\n  title:{\n    marginTop:50,\n    marginBottom:50,\n  },\n  signInButton:{\n    height:47,\n    width:80,\n    marginTop:20,\n    marginBottom:150,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius:0,\n    '&:hover':{\n      backgroundColor: '#D6D6D6'\n    }\n  }\n}));\n\n// TODO: [Feature] Add support for categories without subCategories\nconst CreateProduct = (props) => {\n\n  const classes = useStyles();\n  const categoryRef = props.firebase.categoryRef();\n\n  //category\n  //subcategory\n  //Name\n  //Tags\n  //Description\n  //Details\n  //price\n  //mainImage\n  //subImage1\n  //subImage2\n  //visible\n  //TODO:[Feature] Variants\n  \n\n  const [category, setCategory] = useState('');                   // not '', len < 50\n  const [subCategory, setSubCategory] = useState('');             // not '', len < 50\n  const [name, setName] = useState('');                           // not '', len < 50\n  const [tags, setTags] = useState('');                           // len < 500\n  const [description, setDescription] = useState('');             // not '', len < 1000\n  const [details, setDetails] = useState('');                     // no validation, len < 1000\n  const [price, setPrice] = useState(0);                          // > 0\n  const [previewImage, setPreviewImage] = useState(null);         \n  const [subImageOne, setSubImageOne] = useState(null);           \n  const [subImageTwo, setSubImageTwo] = useState(null);           \n  const [isPublic, setIsPublic] = useState(false)\n  const [model, setModel] = useState('');  // len < 50\n  const [categories, setCategories] = React.useState([])\n  const [subCategories, setSubCategories] = React.useState([]);\n  const [errors, setErrors] = React.useState([]);\n\n\n\n  const onSubmit = event => {\n\n    setErrors([]);\n\n    let _errors = [];\n\n    if(category.length > 50) _errors.push('Category should be less than 50 characters');\n    if(subCategory.length > 50) _errors.push('Sub category should be less than 50 characters');\n    if(name.length > 50) _errors.push('Name should be less than 50 characters');\n    if(tags.length > 500) _errors.push('Tags should be less than 500 characters');\n    if(category.length > 50) _errors.push('Category should be less than 50 characters');\n    if(description.length > 1000) _errors.push('Description should be less than 1000 characters');\n    if(details.length > 1000) _errors.push('Details should be less than 1000 characters');\n    if(price < 0) _errors.push('Price should be a non negative number');\n    if(model.length > 50) _errors.push('Model should be less than 50 characters');\n\n    setErrors(_errors);\n\n    if(_errors.length > 0) return;\n    \n    props.firebase.createProduct({\n      category,\n      subCategory,\n      tags,\n      name,\n      description,\n      details,\n      price,\n      previewImage,\n      subImageOne,\n      subImageTwo,\n      isPublic,\n      model\n    })\n    .then(x => props.history.push(`/store/${category}/${subCategory}`))\n    .catch(err => setErrors([err.message]))//setErrors([\"Something went wrong when trying to create new product\"])) \n\n    event.preventDefault();\n  }\n\n\n  // Update autocomplete when category changes\n  // This event is fired when user selects autocomplete option\n  const onCategorySelect = (event, val) => {\n    setSubCategories([]);\n    setCategory(val);\n    categories.forEach(x => {\n      if(x.name === val && !!x.subCategories){\n        setSubCategories( Object.keys(x.subCategories) )       \n      }\n    })\n  }\n  //This event fires when user writes in the autocomplete textbox\n  const onCategoryChange = (event) => {\n    setSubCategories([]);\n    \n    let val = event.target.value;\n    setCategory(val);\n    categories.forEach(x => {\n      if(x.name === val && !!x.subCategories){\n        setSubCategories( Object.keys(x.subCategories) )\n      }\n    })\n  }\n\n\n  useEffect( () => {\n    const ca = categoryRef.on(\"child_added\", (snapshot, prevChildKey) => {    \n      setCategories(x => [...x, {name:snapshot.key, key:snapshot.key, subCategories:snapshot.val().subCategories}])      \n    })\n\n    const cr = categoryRef.on(\"child_removed\", (snapshot) => {\n      setCategories(x => x.filter(e => e !== snapshot.key) )\n    })\n\n    return () => {\n      categoryRef.off(\"child_added\", ca);\n      categoryRef.off(\"child_removed\", cr);\n    }\n  }, [])\n\n\n\n\n  return(\n    <React.Fragment>\n\n      <Typography className={classes.title} variant=\"h5\"> Додати новий номер </Typography>\n\n      <form onSubmit={onSubmit}>\n        <Grid container spacing={5} >\n   \n          <Grid item xs={6} spacing={5}>\n            <DropzoneArea className={classes.upload} filesLimit={1} dropzoneText=\"Додайте фото\" onChange={(file) => setPreviewImage(file)}/>\n            <Grid item xs={12}>\n              <div className={classes.spacer}> </div>\n            </Grid>\n            <Grid container spacing={2}>\n            \n                <Grid item xs={6}>\n                  <DropzoneArea className={classes.upload} dropzoneText=\"Додайте фото\" onChange={(file) => setSubImageOne(file)}/>\n                </Grid>\n                <Grid item xs={6}>\n                  <DropzoneArea className={classes.upload} dropzoneText=\"Додайте фото\" onChange={(file) => setSubImageTwo(file)}/>\n                </Grid>\n              \n            </Grid>\n\n            <div className={classes.verticalSpacer}>\n              {!!errors && errors.map((e, i) => <SingleLineError key={i} error={e}/>)}\n            </div>\n\n            \n\n          </Grid>\n\n          <Grid item xs={5}>\n            <Grid container spacing={5}>\n              <Grid item xs={6}>\n                <Autocomplete \n                  freeSolo\n                  id=\"category\"\n                  options={categories.map(category => category.name)}\n                  onChange={onCategorySelect}\n                  renderInput={params => (\n                    <TextField autoFocus  \n                    {...params}        \n                    margin=\"normal\"\n                    name=\"category\"\n                    id=\"category\"\n                    label=\"Комплекс\"\n                    value={category}\n                    onChange={onCategoryChange}     \n                    fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n              <Grid item xs={6}>\n              <Autocomplete \n                  freeSolo\n                  id=\"category\"\n                  options={subCategories.map(category => category)}\n                  onChange={(e,v) => {setSubCategory(v)}}\n                  renderInput={params => (\n                    <TextField autoFocus  \n                    {...params}        \n                    margin=\"normal\"\n                    name=\"subCategory\"\n                    id=\"subCategory\"\n                    label=\"Готель\"\n                    value={subCategory}\n                    onChange={(e) => setSubCategory(e.target.value)}     \n                    fullWidth\n                    />\n                  )}\n                />\n              </Grid>\n            </Grid>\n\n          \n                  \n              <Grid container spacing={5}>\n                <Grid item xs={6}>                      \n                  <TextField autoFocus          \n                    margin=\"normal\"\n                    name=\"name\"\n                    id=\"name\"\n                    label=\"Назва\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                    \n                    fullWidth\n                  />\n                </Grid>\n                \n              </Grid> \n            \n\n\n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"description\"\n            multiline\n            rows={8}\n            id=\"description\"\n            label=\"Опис\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            \n            fullWidth\n          />\n\n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"Деталі\"\n            multiline\n            rows={6}\n            id=\"details\"\n            label=\"Деталі\"\n            value={details}\n            onChange={(e) => setDetails(e.target.value)}\n            \n            fullWidth\n          />\n\n          {/* <TextField autoFocus          \n            margin=\"normal\"\n            name=\"tags\"\n            id=\"tags\"\n            label=\"Tag (max 500 char)\"\n            value={tags}\n            onChange={(e) => setTags(e.target.value)}\n            multiline\n            fullWidth\n          />\n           */}\n          <TextField autoFocus          \n            margin=\"normal\"\n            name=\"price\"\n            id=\"price\"\n            label=\"Ціна\"\n            type=\"number\"\n            value={price}\n            onChange={(e) => setPrice(e.target.value)}         \n            fullWidth\n          />\n          <div>\n            <FormControlLabel\n            value=\"bottom\"\n            control={<Checkbox color=\"primary\" checked={isPublic} onChange={(e) => setIsPublic(e.target.checked)}/>}\n            label=\"Опублікувати \"\n            labelPlacement=\"left\"\n            />\n          </div>\n\n          <InfiniteCalendar\n            width={400}\n            height={600}\n            selected={today}\n            disabledDays={[0,6]}\n            minDate={lastWeek}\n          />\n\n          <Button type=\"submit\" className={classes.signInButton}> Додати </Button>\n          </Grid>\n        \n        </Grid>\n      </form>\n    </React.Fragment>\n  );\n}\n\nconst condition = authUser => !!authUser && authUser.isAdmin;\n\nexport default compose(withAuthentication, withAuthorization(condition), withFirebase)(CreateProduct);"]},"metadata":{},"sourceType":"module"}