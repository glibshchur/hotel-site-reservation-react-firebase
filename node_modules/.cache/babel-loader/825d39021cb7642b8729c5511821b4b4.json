{"ast":null,"code":"import _toConsumableArray from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{BrowserRouter as Link}from'react-router-dom';import TextField from'@material-ui/core/TextField';import Button from'@material-ui/core/Button';import SingleLineError from'../../Error';import Grid from'@material-ui/core/Grid';import{makeStyles}from'@material-ui/styles';import{withFirebase}from'../../Firebase';import{compose}from'recompose';import{Typography}from'@material-ui/core';var useStyles=makeStyles(function(theme){return{dialogTitle:{display:\"flex\",justifyContent:\"space-between\",alignItems:\"center\"},icon:{float:\"right\"},returningCustomerText:{marginTop:25},signInButton:{height:47,width:80,margin:0,color:'#FFFFFF',backgroundColor:'#00B4F4',borderRadius:0,'&:hover':{backgroundColor:'#D6D6D6'}},errorPaper:{borderRadius:0,backgroundColor:'#FFBDBD',height:70},errorText:{align:\"center\"},link:{color:'#000000',textDecoration:\"none\",'&:hover':{color:'#00B4F4',textDecoration:\"none\"}}};});var SignUp=function SignUp(props){var classes=useStyles();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userFirstName=_useState2[0],setUserFirstName=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),userLastName=_useState4[0],setUserLastName=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),passwordOne=_useState8[0],setPasswordOne=_useState8[1];var _useState9=useState(''),_useState10=_slicedToArray(_useState9,2),passwordTwo=_useState10[0],setPasswordTwo=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),errors=_useState12[0],setErrors=_useState12[1];var onSubmit=function onSubmit(event){setErrors([]);//validate input\n//we need to validate only if the two passwords match\n//the other inputs are validated by firebase rules/material forms\nif(passwordOne!=passwordTwo)setErrors(function(arr){return[].concat(_toConsumableArray(arr),[\"Passwords don't match\"]);});else// Tries to create user in firbase internal db\n// if its successful creates user in the realtime database which is queriable \nprops.firebase.doCreateUserWithEmailAndPassword(email,passwordOne).then(function(authUser){return props.firebase.user(authUser.user.uid).set({userFirstName:userFirstName,userLastName:userLastName,email:email});// Only way to make a user admin is from the firebase console\n// Firebase /users/isAdmin path is writable only by other admins\n}).then(function(x){return props.history.push('/account');})//redirect to account page\n.catch(function(error){return!!error.message&&setErrors(function(arr){return[].concat(_toConsumableArray(arr),[error.message]);});});// TODO:[Test] might throw some errors that we dont want to display\nevent.preventDefault();};return React.createElement(React.Fragment,null,React.createElement(Grid,{container:true,className:classes.returningCustomerText},React.createElement(Grid,{item:true,xs:3},React.createElement(\"div\",{className:classes.returningCustomerText},React.createElement(Typography,{variant:\"h5\"},\"  \"))),React.createElement(Grid,{item:true,xs:6},React.createElement(\"form\",{onSubmit:onSubmit},!!errors&&errors.map(function(err,id){return React.createElement(SingleLineError,{key:id,error:err});}),React.createElement(Grid,{container:true,spacing:2},React.createElement(Grid,{item:true,xs:6},React.createElement(TextField,{name:\"firstName\",value:userFirstName,onChange:function onChange(e){return setUserFirstName(e.target.value);},type:\"text\",autoFocus:true,id:\"firstName\",label:\"\\u0406\\u043C'\\u044F\",required:true,fullWidth:true})),React.createElement(Grid,{item:true,xs:6},React.createElement(TextField,{name:\"lastname\",value:userLastName,onChange:function onChange(e){return setUserLastName(e.target.value);},type:\"text\",autoFocus:true,id:\"lastname\",label:\"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\",required:true,fullWidth:true}))),React.createElement(TextField,{autoFocus:true,margin:\"normal\",name:\"email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);},id:\"email\",label:\"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u041F\\u043E\\u0448\\u0442\\u0430\",type:\"email\",required:true,fullWidth:true}),React.createElement(TextField,{name:\"passwordOne\",value:passwordOne,onChange:function onChange(e){return setPasswordOne(e.target.value);},autoFocus:true,margin:\"normal\",id:\"passwordOne\",label:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:\"password\",required:true,fullWidth:true}),React.createElement(TextField,{name:\"passwordTwo\",value:passwordTwo,onChange:function onChange(e){return setPasswordTwo(e.target.value);},autoFocus:true,margin:\"normal\",id:\"passwordTwo\",label:\"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",type:\"password\",required:true,fullWidth:true}),React.createElement(Button,{className:classes.signInButton,type:\"submit\",color:\"primary\"},\"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\")),React.createElement(Typography,{className:classes.returningCustomerText},React.createElement(Link,{to:'/register',className:classes.link},\"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456? \\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"))),React.createElement(Grid,{item:true,xs:3})));};export default compose(withFirebase)(SignUp);","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/User/SignUp/index.js"],"names":["React","useState","BrowserRouter","Link","TextField","Button","SingleLineError","Grid","makeStyles","withFirebase","compose","Typography","useStyles","theme","dialogTitle","display","justifyContent","alignItems","icon","float","returningCustomerText","marginTop","signInButton","height","width","margin","color","backgroundColor","borderRadius","errorPaper","errorText","align","link","textDecoration","SignUp","props","classes","userFirstName","setUserFirstName","userLastName","setUserLastName","email","setEmail","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","errors","setErrors","onSubmit","event","arr","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","x","history","push","catch","error","message","preventDefault","map","err","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Link } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport SingleLineError from '../../Error'\nimport Grid from '@material-ui/core/Grid'\n\nimport { makeStyles } from '@material-ui/styles';\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\n\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle:{\n    display:\"flex\",\n    justifyContent:\"space-between\",\n    alignItems:\"center\"\n  },\n  icon:{\n    float:\"right\"\n  },\n  returningCustomerText:{\n    marginTop:25,\n  },\n  signInButton:{\n    height:47,\n    width:80,\n    margin:0,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius:0,\n    '&:hover':{\n      backgroundColor: '#D6D6D6'\n    }\n  },\n  errorPaper:{\n    borderRadius:0,\n    backgroundColor: '#FFBDBD',\n    height:70\n  },\n  errorText:{\n    align:\"center\"\n  },\n  link:{\n    color: '#000000',\n    textDecoration: \"none\",\n    '&:hover':{\n      color: '#00B4F4',\n      textDecoration: \"none\",\n    }\n  }\n}));\n\nconst SignUp = (props) => {\n\n  const classes = useStyles();\n\n  const [userFirstName, setUserFirstName] = useState('');\n  const [userLastName, setUserLastName] = useState('')\n  const [email, setEmail] = useState('');\n  const [passwordOne, setPasswordOne] = useState('');\n  const [passwordTwo, setPasswordTwo] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const onSubmit = event => {\n    \n    setErrors([]);\n\n    //validate input\n    //we need to validate only if the two passwords match\n    //the other inputs are validated by firebase rules/material forms\n    if(passwordOne != passwordTwo)\n      setErrors(arr => [...arr, \"Passwords don't match\"])\n    else\n    // Tries to create user in firbase internal db\n    // if its successful creates user in the realtime database which is queriable \n    props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        return props.firebase\n          .user(authUser.user.uid)\n          .set({userFirstName, userLastName, email}); \n          // Only way to make a user admin is from the firebase console\n          // Firebase /users/isAdmin path is writable only by other admins\n      })\n      .then(x => props.history.push('/account'))  //redirect to account page\n      .catch(error => !!error.message && setErrors(arr => [...arr, error.message])) // TODO:[Test] might throw some errors that we dont want to display\n    \n    event.preventDefault();\n  }\n\n  return(\n    <React.Fragment>\n      <Grid container className={classes.returningCustomerText}>\n\n        <Grid item xs={3}>\n          <div className={classes.returningCustomerText}>\n            <Typography variant=\"h5\" >  </Typography>\n          </div>     \n        </Grid>\n\n        <Grid item xs={6}>      \n          <form onSubmit={onSubmit}>     \n            {!!errors && errors.map((err, id) => {\n              return(<SingleLineError key={id} error={err}/>)\n            })}\n            \n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n\n              <TextField\n                name=\"firstName\"\n                value={userFirstName}\n                onChange={(e) => setUserFirstName(e.target.value)}\n                type=\"text\"\n                autoFocus          \n                id=\"firstName\"\n                label=\"Ім'я\"\n                required\n                fullWidth\n\n              />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  name=\"lastname\"\n                  value={userLastName}\n                  onChange={(e) => setUserLastName(e.target.value)}\n                  type=\"text\"\n                  autoFocus          \n                  id=\"lastname\"\n                  label=\"Прізвище\"\n                  required\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <TextField\n                autoFocus          \n                margin=\"normal\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                id=\"email\"\n                label=\"Електронна Пошта\"\n                type=\"email\"\n                required\n                fullWidth\n              />\n              <TextField\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={(e) => setPasswordOne(e.target.value)}\n                autoFocus\n                margin=\"normal\"\n                id=\"passwordOne\"\n                label=\"Пароль\"\n                type=\"password\"\n                required\n                fullWidth\n              />\n              <TextField\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={(e) => setPasswordTwo(e.target.value)}\n                autoFocus\n                margin=\"normal\"\n                id=\"passwordTwo\"\n                label=\"Повторіть Пароль\"\n                type=\"password\"\n                required\n                fullWidth\n              />\n              <Button className={classes.signInButton} type=\"submit\" color=\"primary\">\n                Реєстрація\n              </Button>\n          </form>\n          <Typography className={classes.returningCustomerText} >\n            <Link to={'/register'} className={classes.link}>\n              Уже зареєстровані? Увійти\n            </Link>                 \n          </Typography>  \n          </Grid>\n            <Grid item xs={3}>\n          </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\n\nexport default compose(withFirebase)(SignUp);\n\n\n"]},"metadata":{},"sourceType":"module"}