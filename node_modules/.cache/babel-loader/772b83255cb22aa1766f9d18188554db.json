{"ast":null,"code":"import _slicedToArray from \"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/User/SignUp/index.js\";\nimport React, { useState } from 'react';\nimport { BrowserRouter as Link } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport SingleLineError from '../../Error';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\nimport { Typography } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\"\n  },\n  icon: {\n    float: \"right\"\n  },\n  returningCustomerText: {\n    marginTop: 25\n  },\n  signInButton: {\n    height: 47,\n    width: 80,\n    margin: 0,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#D6D6D6'\n    }\n  },\n  errorPaper: {\n    borderRadius: 0,\n    backgroundColor: '#FFBDBD',\n    height: 70\n  },\n  errorText: {\n    align: \"center\"\n  },\n  link: {\n    color: '#000000',\n    textDecoration: \"none\",\n    '&:hover': {\n      color: '#00B4F4',\n      textDecoration: \"none\"\n    }\n  }\n}));\n\nconst SignUp = props => {\n  const classes = useStyles();\n\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        userFirstName = _useState2[0],\n        setUserFirstName = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userLastName = _useState4[0],\n        setUserLastName = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        email = _useState6[0],\n        setEmail = _useState6[1];\n\n  const _useState7 = useState(''),\n        _useState8 = _slicedToArray(_useState7, 2),\n        passwordOne = _useState8[0],\n        setPasswordOne = _useState8[1];\n\n  const _useState9 = useState(''),\n        _useState10 = _slicedToArray(_useState9, 2),\n        passwordTwo = _useState10[0],\n        setPasswordTwo = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        errors = _useState12[0],\n        setErrors = _useState12[1];\n\n  const onSubmit = event => {\n    setErrors([]); //validate input\n    //we need to validate only if the two passwords match\n    //the other inputs are validated by firebase rules/material forms\n\n    if (passwordOne != passwordTwo) setErrors(arr => [...arr, \"Passwords don't match\"]);else // Tries to create user in firbase internal db\n      // if its successful creates user in the realtime database which is queriable \n      props.firebase.doCreateUserWithEmailAndPassword(email, passwordOne).then(authUser => {\n        return props.firebase.user(authUser.user.uid).set({\n          userFirstName,\n          userLastName,\n          email\n        }); // Only way to make a user admin is from the firebase console\n        // Firebase /users/isAdmin path is writable only by other admins\n      }).then(x => props.history.push('/account')) //redirect to account page\n      .catch(error => !!error.message && setErrors(arr => [...arr, error.message])); // TODO:[Test] might throw some errors that we dont want to display\n\n    event.preventDefault();\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    className: classes.returningCustomerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.returningCustomerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, \"  \"))), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, !!errors && errors.map((err, id) => {\n    return React.createElement(SingleLineError, {\n      key: id,\n      error: err,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    });\n  }), React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"firstName\",\n    value: userFirstName,\n    onChange: e => setUserFirstName(e.target.value),\n    type: \"text\",\n    autoFocus: true,\n    id: \"firstName\",\n    label: \"\\u0406\\u043C'\\u044F\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  })), React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    name: \"lastname\",\n    value: userLastName,\n    onChange: e => setUserLastName(e.target.value),\n    type: \"text\",\n    autoFocus: true,\n    id: \"lastname\",\n    label: \"\\u041F\\u0440\\u0456\\u0437\\u0432\\u0438\\u0449\\u0435\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }))), React.createElement(TextField, {\n    autoFocus: true,\n    margin: \"normal\",\n    name: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    id: \"email\",\n    label: \"\\u0415\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430 \\u041F\\u043E\\u0448\\u0442\\u0430\",\n    type: \"email\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"passwordOne\",\n    value: passwordOne,\n    onChange: e => setPasswordOne(e.target.value),\n    autoFocus: true,\n    margin: \"normal\",\n    id: \"passwordOne\",\n    label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    name: \"passwordTwo\",\n    value: passwordTwo,\n    onChange: e => setPasswordTwo(e.target.value),\n    autoFocus: true,\n    margin: \"normal\",\n    id: \"passwordTwo\",\n    label: \"\\u041F\\u043E\\u0432\\u0442\\u043E\\u0440\\u0456\\u0442\\u044C \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    type: \"password\",\n    required: true,\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: classes.signInButton,\n    type: \"submit\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"\\u0420\\u0435\\u0454\\u0441\\u0442\\u0440\\u0430\\u0446\\u0456\\u044F\")), React.createElement(Typography, {\n    className: classes.returningCustomerText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: '/register',\n    className: classes.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }, \"\\u0423\\u0436\\u0435 \\u0437\\u0430\\u0440\\u0435\\u0454\\u0441\\u0442\\u0440\\u043E\\u0432\\u0430\\u043D\\u0456? \\u0423\\u0432\\u0456\\u0439\\u0442\\u0438\"))), React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  })));\n};\n\nexport default compose(withFirebase)(SignUp);","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/User/SignUp/index.js"],"names":["React","useState","BrowserRouter","Link","TextField","Button","SingleLineError","Grid","makeStyles","withFirebase","compose","Typography","useStyles","theme","dialogTitle","display","justifyContent","alignItems","icon","float","returningCustomerText","marginTop","signInButton","height","width","margin","color","backgroundColor","borderRadius","errorPaper","errorText","align","link","textDecoration","SignUp","props","classes","userFirstName","setUserFirstName","userLastName","setUserLastName","email","setEmail","passwordOne","setPasswordOne","passwordTwo","setPasswordTwo","errors","setErrors","onSubmit","event","arr","firebase","doCreateUserWithEmailAndPassword","then","authUser","user","uid","set","x","history","push","catch","error","message","preventDefault","map","err","id","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Link } from 'react-router-dom';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\n\nimport SingleLineError from '../../Error'\nimport Grid from '@material-ui/core/Grid'\n\nimport { makeStyles } from '@material-ui/styles';\nimport { withFirebase } from '../../Firebase';\nimport { compose } from 'recompose';\n\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle:{\n    display:\"flex\",\n    justifyContent:\"space-between\",\n    alignItems:\"center\"\n  },\n  icon:{\n    float:\"right\"\n  },\n  returningCustomerText:{\n    marginTop:25,\n  },\n  signInButton:{\n    height:47,\n    width:80,\n    margin:0,\n    color: '#FFFFFF',\n    backgroundColor: '#00B4F4',\n    borderRadius:0,\n    '&:hover':{\n      backgroundColor: '#D6D6D6'\n    }\n  },\n  errorPaper:{\n    borderRadius:0,\n    backgroundColor: '#FFBDBD',\n    height:70\n  },\n  errorText:{\n    align:\"center\"\n  },\n  link:{\n    color: '#000000',\n    textDecoration: \"none\",\n    '&:hover':{\n      color: '#00B4F4',\n      textDecoration: \"none\",\n    }\n  }\n}));\n\nconst SignUp = (props) => {\n\n  const classes = useStyles();\n\n  const [userFirstName, setUserFirstName] = useState('');\n  const [userLastName, setUserLastName] = useState('')\n  const [email, setEmail] = useState('');\n  const [passwordOne, setPasswordOne] = useState('');\n  const [passwordTwo, setPasswordTwo] = useState('');\n  const [errors, setErrors] = useState([]);\n\n  const onSubmit = event => {\n    \n    setErrors([]);\n\n    //validate input\n    //we need to validate only if the two passwords match\n    //the other inputs are validated by firebase rules/material forms\n    if(passwordOne != passwordTwo)\n      setErrors(arr => [...arr, \"Passwords don't match\"])\n    else\n    // Tries to create user in firbase internal db\n    // if its successful creates user in the realtime database which is queriable \n    props.firebase\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\n      .then(authUser => {\n        return props.firebase\n          .user(authUser.user.uid)\n          .set({userFirstName, userLastName, email}); \n          // Only way to make a user admin is from the firebase console\n          // Firebase /users/isAdmin path is writable only by other admins\n      })\n      .then(x => props.history.push('/account'))  //redirect to account page\n      .catch(error => !!error.message && setErrors(arr => [...arr, error.message])) // TODO:[Test] might throw some errors that we dont want to display\n    \n    event.preventDefault();\n  }\n\n  return(\n    <React.Fragment>\n      <Grid container className={classes.returningCustomerText}>\n\n        <Grid item xs={3}>\n          <div className={classes.returningCustomerText}>\n            <Typography variant=\"h5\" >  </Typography>\n          </div>     \n        </Grid>\n\n        <Grid item xs={6}>      \n          <form onSubmit={onSubmit}>     \n            {!!errors && errors.map((err, id) => {\n              return(<SingleLineError key={id} error={err}/>)\n            })}\n            \n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n\n              <TextField\n                name=\"firstName\"\n                value={userFirstName}\n                onChange={(e) => setUserFirstName(e.target.value)}\n                type=\"text\"\n                autoFocus          \n                id=\"firstName\"\n                label=\"Ім'я\"\n                required\n                fullWidth\n\n              />\n              </Grid>\n              <Grid item xs={6}>\n                <TextField\n                  name=\"lastname\"\n                  value={userLastName}\n                  onChange={(e) => setUserLastName(e.target.value)}\n                  type=\"text\"\n                  autoFocus          \n                  id=\"lastname\"\n                  label=\"Прізвище\"\n                  required\n                  fullWidth\n                />\n              </Grid>\n            </Grid>\n            <TextField\n                autoFocus          \n                margin=\"normal\"\n                name=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                id=\"email\"\n                label=\"Електронна Пошта\"\n                type=\"email\"\n                required\n                fullWidth\n              />\n              <TextField\n                name=\"passwordOne\"\n                value={passwordOne}\n                onChange={(e) => setPasswordOne(e.target.value)}\n                autoFocus\n                margin=\"normal\"\n                id=\"passwordOne\"\n                label=\"Пароль\"\n                type=\"password\"\n                required\n                fullWidth\n              />\n              <TextField\n                name=\"passwordTwo\"\n                value={passwordTwo}\n                onChange={(e) => setPasswordTwo(e.target.value)}\n                autoFocus\n                margin=\"normal\"\n                id=\"passwordTwo\"\n                label=\"Повторіть Пароль\"\n                type=\"password\"\n                required\n                fullWidth\n              />\n              <Button className={classes.signInButton} type=\"submit\" color=\"primary\">\n                Реєстрація\n              </Button>\n          </form>\n          <Typography className={classes.returningCustomerText} >\n            <Link to={'/register'} className={classes.link}>\n              Уже зареєстровані? Увійти\n            </Link>                 \n        </Typography>  \n          </Grid>\n            <Grid item xs={3}>\n          </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n}\n\n\nexport default compose(withFirebase)(SignUp);\n\n\n"]},"metadata":{},"sourceType":"module"}