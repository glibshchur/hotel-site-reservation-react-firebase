{"ast":null,"code":"import _slicedToArray from\"/Users/hshchu/Desktop/github/e-commerce/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import ListItem from'@material-ui/core/ListItem';import ListItemText from'@material-ui/core/ListItemText';import TextField from'@material-ui/core/TextField';import{withFirebase}from'../Firebase';import{withAuthorization}from'../Session';import{compose}from'recompose';import Typography from'@material-ui/core/Typography';import{makeStyles}from'@material-ui/core/styles';var useStyles=makeStyles(function(theme){return{drawer:{width:240,flexShrink:0},drawerPaper:{marginTop:0,width:225,backgroundColor:\"#DDDDDC\",borderRight:0},logo:{marginTop:20,marginRight:40,marginLeft:30},navList:{marginTop:110},link:{textDecoration:\"none\"},navButton:{color:\"#00c3d9\",marginLeft:30},adminNavButton:{color:\"#ffffff\",marginLeft:30}};});var condition=function condition(authUser){return authUser&&authUser.isAdmin;};var NewCategoryButton=function NewCategoryButton(props){var classes=useStyles();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),active=_useState2[0],setActive=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),category=_useState4[0],setCategory=_useState4[1];var onSubmit=function onSubmit(event){console.log('asd');if(props.category){props.firebase.createCategory(props.category,category).catch(function(e){return console.log(e);});}else{props.firebase.createCategory(category,null).catch(function(e){return console.log(e);});}event.preventDefault();setActive(false);};// Currently using a form to submit the new catgeory\n// Can also be done with keyDown callback which might be better\nif(active){return React.createElement(React.Fragment,null,React.createElement(\"form\",{onSubmit:onSubmit},React.createElement(TextField,{name:\"category\",value:category,onChange:function onChange(e){return setCategory(e.target.value);},type:\"text\",autoFocus:true,margin:\"normal\",id:\"category\",label:\"Category Name\",fullWidth:true})));}return React.createElement(React.Fragment,null,React.createElement(ListItem,{button:true,onClick:function onClick(e){return setActive(true);}},React.createElement(Typography,{variant:\"h6\",className:classes.adminNavButton},\"+\")));};export default compose(withFirebase)(NewCategoryButton);","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Navigation/NewCategoryButton.js"],"names":["React","useEffect","useState","ListItem","ListItemText","TextField","withFirebase","withAuthorization","compose","Typography","makeStyles","useStyles","theme","drawer","width","flexShrink","drawerPaper","marginTop","backgroundColor","borderRight","logo","marginRight","marginLeft","navList","link","textDecoration","navButton","color","adminNavButton","condition","authUser","isAdmin","NewCategoryButton","props","classes","active","setActive","category","setCategory","onSubmit","event","console","log","firebase","createCategory","catch","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TextField from '@material-ui/core/TextField';\nimport { withFirebase } from '../Firebase'\nimport { withAuthorization } from '../Session'\nimport { compose } from 'recompose'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  drawer:{\n    width:240,\n    flexShrink:0,\n\n  },\n  drawerPaper:{\n    marginTop:0,\n    width:225,\n    backgroundColor:\"#DDDDDC\",\n    borderRight:0,\n  },\n  logo:{\n    marginTop:20,\n    marginRight:40,\n    marginLeft:30,\n  },\n  navList:{\n    marginTop:110,\n\n  },\n  link:{\n    textDecoration:\"none\",\n  },\n  navButton:{\n    color:\"#00c3d9\",\n    marginLeft:30\n  },\n  adminNavButton:{\n    color:\"#ffffff\",\n    marginLeft:30\n  }\n}));\n\nconst condition = authUser => authUser && authUser.isAdmin;\n\n\nconst NewCategoryButton = (props) => {\n\n  const classes = useStyles();\n\n  const [active, setActive] = useState(false);\n  const [category, setCategory] = useState('');\n\n  const onSubmit = (event) => {\n\n    console.log('asd');\n\n    if(props.category){\n      props.firebase.createCategory(props.category, category).catch(e => console.log(e));\n    }\n    else{\n      props.firebase.createCategory(category, null).catch(e => console.log(e));\n    }\n    \n    event.preventDefault();\n\n    setActive(false);\n    \n\n  }\n\n  // Currently using a form to submit the new catgeory\n  // Can also be done with keyDown callback which might be better\n  if(active)  {\n    return(\n      <React.Fragment>\n        <form onSubmit = {onSubmit}>\n          <TextField\n            name=\"category\"\n            value={category}\n            onChange={(e) => setCategory(e.target.value)}\n            type=\"text\"\n            autoFocus          \n            margin=\"normal\"\n            id=\"category\"\n            label=\"Category Name\"\n            fullWidth\n          />\n        </form>\n      </React.Fragment>\n    )\n  }\n\n  return(  \n    <React.Fragment>\n      <ListItem button onClick={(e) => setActive(true)}>\n        <Typography variant=\"h6\" className={classes.adminNavButton} >+</Typography>\n      </ListItem>\n    </React.Fragment>\n  )\n\n}\n\nexport default compose(withFirebase)(NewCategoryButton)"]},"metadata":{},"sourceType":"module"}