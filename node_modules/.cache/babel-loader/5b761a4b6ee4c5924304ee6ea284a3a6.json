{"ast":null,"code":"(function () {\n  var validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\n\n  function gen(count) {\n    var out = \"\";\n\n    for (var i = 0; i < count; i++) {\n      out += ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n    }\n\n    return out;\n  }\n\n  function Guid(guid) {\n    if (!guid) throw new TypeError(\"Invalid argument; `value` has no value.\");\n    this.value = Guid.EMPTY;\n\n    if (guid && guid instanceof Guid) {\n      this.value = guid.toString();\n    } else if (guid && Object.prototype.toString.call(guid) === \"[object String]\" && Guid.isGuid(guid)) {\n      this.value = guid;\n    }\n\n    this.equals = function (other) {\n      // Comparing string `value` against provided `guid` will auto-call\n      // toString on `guid` for comparison\n      return Guid.isGuid(other) && this.value == other;\n    };\n\n    this.isEmpty = function () {\n      return this.value === Guid.EMPTY;\n    };\n\n    this.toString = function () {\n      return this.value;\n    };\n\n    this.toJSON = function () {\n      return this.value;\n    };\n  }\n\n  ;\n  Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\n\n  Guid.isGuid = function (value) {\n    return value && (value instanceof Guid || validator.test(value.toString()));\n  };\n\n  Guid.create = function () {\n    return new Guid([gen(2), gen(1), gen(1), gen(1), gen(3)].join(\"-\"));\n  };\n\n  Guid.raw = function () {\n    return [gen(2), gen(1), gen(1), gen(1), gen(3)].join(\"-\");\n  };\n\n  if (typeof module != 'undefined' && module.exports) {\n    module.exports = Guid;\n  } else if (typeof window != 'undefined') {\n    window.Guid = Guid;\n  }\n})();","map":null,"metadata":{},"sourceType":"script"}