{"ast":null,"code":"var _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Session/withAuthentication.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    СomponentDidMount() {\n      this.listener = this.props.firebase.onAuthUserListener(authUser => {\n        if (!condition(authUser)) {\n          this.props.history.push(ROUTES.SIGN_IN);\n        }\n      }, () => {\n        this.props.history.push(ROUTES.SIGN_IN);\n      });\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (// <AuthUserContext.Provider value={this.state.authUser}>\n        //   <Component {...this.props} />\n        // </AuthUserContext.Provider>\n        React.createElement(AuthUserContext.Provider, {\n          value: this.state.authUser,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(Component, Object.assign({}, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        })))\n      );\n    }\n\n  }\n\n  return compose(withRouter, withFirebase)(WithAuthentication);\n};\n\nexport default withAuthentication;\n/*\nexport default withAuthentication;\nimport React, { useEffect } from 'react';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\n\n\n\n\n\n\n\nconst withAuthentication = Component => {\n  const WithAuthentication = (props) => {\n    const [authUser, setAuthUser] = React.useState(null);\n    const [listener, setListener] = React.useState(null);\n\n    useEffect( () => {\n      const setListener = props.firebase.auth.onAuthStateChanged(u => {u ? setAuthUser(u) : setAuthUser(null);} );\n    }, []); // \n\n    return(\n    <AuthUserContext.Provider value={authUser}>\n      <AuthUserContext.Consumer>\n        {authUser => <Component {...props} authUser={authUser}/>}\n      </AuthUserContext.Consumer>  \n    </AuthUserContext.Provider>  \n    );\n\n  }\n  return compose(withFirebase)(WithAuthentication);\n}\n\nexport default withAuthentication;\n*/","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Session/withAuthentication.js"],"names":["React","withRouter","compose","AuthUserContext","withFirebase","ROUTES","withAuthentication","Component","WithAuthentication","СomponentDidMount","listener","props","firebase","onAuthUserListener","authUser","condition","history","push","SIGN_IN","componentWillUnmount","render","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAOC,eAAP,MAA4B,WAA5B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAO,KAAKC,MAAZ,MAAwB,wBAAxB;;AAEA,MAAMC,kBAAkB,GAAGC,SAAS,IAAI;AACtC,QAAMC,kBAAN,SAAiCR,KAAK,CAACO,SAAvC,CAAiD;AAC/CE,IAAAA,iBAAiB,GAAG;AAElB,WAAKC,QAAL,GAAgB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,kBAApB,CACdC,QAAQ,IAAI;AACV,YAAI,CAACC,SAAS,CAACD,QAAD,CAAd,EAA0B;AACxB,eAAKH,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AACD;AACF,OALa,EAOd,MAAM;AAAC,aAAKP,KAAL,CAAWK,OAAX,CAAmBC,IAAnB,CAAwBZ,MAAM,CAACa,OAA/B;AAAwC,OAPjC,CAAhB;AAWD;;AAEDC,IAAAA,oBAAoB,GAAG;AACrB,WAAKT,QAAL;AACD;;AAEDU,IAAAA,MAAM,GAAG;AACP,aACE;AACA;AACA;AACA,4BAAC,eAAD,CAAiB,QAAjB;AAA0B,UAAA,KAAK,EAAE,KAAKC,KAAL,CAAWP,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,SAAD,oBAAe,KAAKH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAJF;AAQD;;AA7B8C;;AAgCjD,SAAOT,OAAO,CACZD,UADY,EAEZG,YAFY,CAAP,CAGLI,kBAHK,CAAP;AAID,CArCD;;AAuCA,eAAeF,kBAAf;AAGA","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\nimport * as ROUTES from '../../constants/routes';\n\nconst withAuthentication = Component => {\n  class WithAuthentication extends React.Component {\n    СomponentDidMount() {\n\n      this.listener = this.props.firebase.onAuthUserListener(\n        authUser => {\n          if (!condition(authUser)) {\n            this.props.history.push(ROUTES.SIGN_IN);\n          }\n        },\n        \n        () => {this.props.history.push(ROUTES.SIGN_IN)},\n      );\n      \n\n    }\n\n    componentWillUnmount() {\n      this.listener();\n    }\n\n    render() {\n      return (\n        // <AuthUserContext.Provider value={this.state.authUser}>\n        //   <Component {...this.props} />\n        // </AuthUserContext.Provider>\n        <AuthUserContext.Provider value={this.state.authUser}>\n          <Component {...this.props} />\n        </AuthUserContext.Provider>\n      );\n    }\n  }\n\n  return compose(\n    withRouter,\n    withFirebase,\n  )(WithAuthentication);\n};\n\nexport default withAuthentication;\n\n\n/*\nexport default withAuthentication;\nimport React, { useEffect } from 'react';\nimport { compose } from 'recompose';\n\nimport AuthUserContext from './context';\nimport { withFirebase } from '../Firebase';\n\n\n\n\n\n\n\n\nconst withAuthentication = Component => {\n  const WithAuthentication = (props) => {\n    const [authUser, setAuthUser] = React.useState(null);\n    const [listener, setListener] = React.useState(null);\n\n    useEffect( () => {\n      const setListener = props.firebase.auth.onAuthStateChanged(u => {u ? setAuthUser(u) : setAuthUser(null);} );\n    }, []); // \n\n    return(\n    <AuthUserContext.Provider value={authUser}>\n      <AuthUserContext.Consumer>\n        {authUser => <Component {...props} authUser={authUser}/>}\n      </AuthUserContext.Consumer>  \n    </AuthUserContext.Provider>  \n    );\n\n  }\n  return compose(withFirebase)(WithAuthentication);\n}\n\nexport default withAuthentication;\n*/"]},"metadata":{},"sourceType":"module"}