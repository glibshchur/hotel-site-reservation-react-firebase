{"ast":null,"code":"var _jsxFileName = \"/Users/hshchu/Desktop/github/e-commerce/src/components/Archive/ArchiveListItem.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, CardMedia, Card, CardContent, CardActions, Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  gridItemAdmin: {\n    height: 500,\n    width: \"100%\",\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  gridItem: {\n    height: 550,\n    width: \"100%\",\n    borderRadius: 0,\n    '&:hover': {\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  card: {\n    maxHeight: 100,\n    borderRadius: 0,\n    textDecoration: \"none\"\n  },\n  cardContent: {\n    height: 100,\n    backgroundColor: \"#F1F2F0\"\n  },\n  media: {\n    height: 400,\n    borderRadius: 0\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"#000000\"\n  }\n}));\n\nconst ArchiveListItem = props => {\n  const classes = useStyles();\n  return React.createElement(Grid, {\n    className: classes.gridItem,\n    item: true,\n    xs: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Card, {\n    elevation: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(CardMedia, {\n    className: classes.media,\n    image: props.product.imageRef,\n    title: \"test\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \" \", props.product.name, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \" \", props.product.model, \" \"), React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \" \", props.product.price, \" \\u0433\\u0440\\u043D \")), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: e => {\n      props.firebase.restoreArchivedProduct(props.product.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\\u0412\\u0456\\u0434\\u043D\\u043E\\u0432\\u0438\\u0442\\u0438\"), React.createElement(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: e => {\n      props.firebase.deleteArchivedProduct(props.product.key);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\")));\n};\n\nexport default ArchiveListItem;","map":{"version":3,"sources":["/Users/hshchu/Desktop/github/e-commerce/src/components/Archive/ArchiveListItem.js"],"names":["React","useEffect","useState","useRef","makeStyles","Grid","Typography","CardMedia","Card","CardContent","CardActions","Button","useStyles","theme","gridItemAdmin","height","width","borderRadius","backgroundColor","gridItem","card","maxHeight","textDecoration","cardContent","media","link","color","ArchiveListItem","props","classes","product","imageRef","name","model","price","e","firebase","restoreArchivedProduct","key","deleteArchivedProduct"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, CardMedia, Card, CardContent, CardActions, Button } from '@material-ui/core'\n\n\n\nconst useStyles = makeStyles(theme => ({\n  gridItemAdmin:{\n    height:500,\n    width:\"100%\",\n    borderRadius:0, \n\n    '&:hover':{\n      backgroundColor: '#FCFDFC'\n    } \n  },\n  gridItem:{\n    height:550,\n    width:\"100%\",\n    borderRadius:0, \n\n    '&:hover':{\n      backgroundColor: '#FCFDFC'\n    }\n  },\n  card: {\n    maxHeight:100,\n    borderRadius:0,\n    textDecoration: \"none\",\n  },\n  cardContent:{\n    height:100,\n    backgroundColor:\"#F1F2F0\",\n\n\n  },\n  media: {\n    height: 400,\n    borderRadius:0,\n\n  },\n  link:{\n    textDecoration: \"none\",\n    color:\"#000000\"\n  }\n}));\n\n\nconst ArchiveListItem  = props => {\n  const classes = useStyles();\n\n    return(\n      <Grid className={classes.gridItem} item xs={3}>\n        <Card elevation={0}>\n          <CardMedia \n          className={classes.media}\n          image={props.product.imageRef}\n          title={\"test\"}\n          \n          />\n        </Card>\n        <CardContent>\n          <Typography> {props.product.name} </Typography>\n          <Typography> {props.product.model} </Typography>\n          <Typography> {props.product.price} грн </Typography>\n        </CardContent>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\" onClick={(e) => {props.firebase.restoreArchivedProduct(props.product.key)}}>\n            Відновити\n          </Button>\n          <Button size=\"small\" color=\"primary\" onClick={(e) => {props.firebase.deleteArchivedProduct(props.product.key)}}>\n            Видалити\n          </Button>\n        </CardActions>\n        \n      </Grid>\n    )\n\n\n\n}\n\n\nexport default ArchiveListItem ;"]},"metadata":{},"sourceType":"module"}